//
// Generated file, do not edit! Created by nedtool 5.6 from apps/mecRequestResponseApp/packets/MecRequestResponsePacket.msg.
//

#ifndef __MECREQUESTRESPONSEPACKET_M_H
#define __MECREQUESTRESPONSEPACKET_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



class MecRequestResponsePacket;
#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk

/**
 * Class generated from <tt>apps/mecRequestResponseApp/packets/MecRequestResponsePacket.msg:21</tt> by nedtool.
 * <pre>
 * class MecRequestResponsePacket extends inet::FieldsChunk
 * {
 *     unsigned int sno;
 * 
 *     double reqTimestamp;
 *     double respTimestamp;
 * 
 *     int bsId;
 *     int appId;
 * 
 *     string srcAddress;
 *     int srcPort;
 *     string destAddress;
 *     int destPort;
 * }
 * </pre>
 */
class MecRequestResponsePacket : public ::inet::FieldsChunk
{
  protected:
    unsigned int sno = 0;
    double reqTimestamp = 0;
    double respTimestamp = 0;
    int bsId = 0;
    int appId = 0;
    omnetpp::opp_string srcAddress;
    int srcPort = 0;
    omnetpp::opp_string destAddress;
    int destPort = 0;

  private:
    void copy(const MecRequestResponsePacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MecRequestResponsePacket&);

  public:
    MecRequestResponsePacket();
    MecRequestResponsePacket(const MecRequestResponsePacket& other);
    virtual ~MecRequestResponsePacket();
    MecRequestResponsePacket& operator=(const MecRequestResponsePacket& other);
    virtual MecRequestResponsePacket *dup() const override {return new MecRequestResponsePacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual unsigned int getSno() const;
    virtual void setSno(unsigned int sno);
    virtual double getReqTimestamp() const;
    virtual void setReqTimestamp(double reqTimestamp);
    virtual double getRespTimestamp() const;
    virtual void setRespTimestamp(double respTimestamp);
    virtual int getBsId() const;
    virtual void setBsId(int bsId);
    virtual int getAppId() const;
    virtual void setAppId(int appId);
    virtual const char * getSrcAddress() const;
    virtual void setSrcAddress(const char * srcAddress);
    virtual int getSrcPort() const;
    virtual void setSrcPort(int srcPort);
    virtual const char * getDestAddress() const;
    virtual void setDestAddress(const char * destAddress);
    virtual int getDestPort() const;
    virtual void setDestPort(int destPort);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const MecRequestResponsePacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, MecRequestResponsePacket& obj) {obj.parsimUnpack(b);}

#endif // ifndef __MECREQUESTRESPONSEPACKET_M_H

