//
// Generated file, do not edit! Created by nedtool 5.6 from corenetwork/trafficFlowFilter/TftControlInfo.msg.
//

#ifndef __TFTCONTROLINFO_M_H
#define __TFTCONTROLINFO_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



class TftControlInfo;
#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "common/LteCommon_m.h" // import common.LteCommon

#include "inet/common/TagBase_m.h" // import inet.common.TagBase

/**
 * Class generated from <tt>corenetwork/trafficFlowFilter/TftControlInfo.msg:17</tt> by nedtool.
 * <pre>
 * class TftControlInfo extends inet::TagBase
 * {
 *     unsigned int tft;
 * }
 * </pre>
 */
class TftControlInfo : public ::inet::TagBase
{
  protected:
    unsigned int tft = 0;

  private:
    void copy(const TftControlInfo& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const TftControlInfo&);

  public:
    TftControlInfo();
    TftControlInfo(const TftControlInfo& other);
    virtual ~TftControlInfo();
    TftControlInfo& operator=(const TftControlInfo& other);
    virtual TftControlInfo *dup() const override {return new TftControlInfo(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual unsigned int getTft() const;
    virtual void setTft(unsigned int tft);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const TftControlInfo& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, TftControlInfo& obj) {obj.parsimUnpack(b);}

#endif // ifndef __TFTCONTROLINFO_M_H

