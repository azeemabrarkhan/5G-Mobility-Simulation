//
// Generated file, do not edit! Created by nedtool 5.6 from messages/SensorMsg.msg.
//

#ifndef __SENSORMSG_M_H
#define __SENSORMSG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
    #include "util/DataTypes/StateDataTypes.h" 
    #include "modules/vehicle/LocalSituationPicture.h"
    
// }}

/**
 * Class generated from <tt>messages/SensorMsg.msg:26</tt> by nedtool.
 * <pre>
 * message SensorMsg
 * {
 *     StateWithCovariance VehicleState;
 * }
 * </pre>
 */
class SensorMsg : public ::omnetpp::cMessage
{
  protected:
    StateWithCovariance VehicleState;

  private:
    void copy(const SensorMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const SensorMsg&);

  public:
    SensorMsg(const char *name=nullptr, short kind=0);
    SensorMsg(const SensorMsg& other);
    virtual ~SensorMsg();
    SensorMsg& operator=(const SensorMsg& other);
    virtual SensorMsg *dup() const override {return new SensorMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual StateWithCovariance& getVehicleState();
    virtual const StateWithCovariance& getVehicleState() const {return const_cast<SensorMsg*>(this)->getVehicleState();}
    virtual void setVehicleState(const StateWithCovariance& VehicleState);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const SensorMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, SensorMsg& obj) {obj.parsimUnpack(b);}


#endif // ifndef __SENSORMSG_M_H

