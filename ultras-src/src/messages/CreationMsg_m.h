//
// Generated file, do not edit! Created by nedtool 5.6 from messages/CreationMsg.msg.
//

#ifndef __CREATIONMSG_M_H
#define __CREATIONMSG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



class CreationMsg;
/**
 * Class generated from <tt>messages/CreationMsg.msg:19</tt> by nedtool.
 * <pre>
 * //
 * // Message used for dynamic module creation
 * //
 * message CreationMsg
 * {
 *     string moduleName; // module name
 *     string missionID; // mission id
 *     string trajectoryID; // trajectory id
 * }
 * </pre>
 */
class CreationMsg : public ::omnetpp::cMessage
{
  protected:
    omnetpp::opp_string moduleName;
    omnetpp::opp_string missionID;
    omnetpp::opp_string trajectoryID;

  private:
    void copy(const CreationMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const CreationMsg&);

  public:
    CreationMsg(const char *name=nullptr, short kind=0);
    CreationMsg(const CreationMsg& other);
    virtual ~CreationMsg();
    CreationMsg& operator=(const CreationMsg& other);
    virtual CreationMsg *dup() const override {return new CreationMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const char * getModuleName() const;
    virtual void setModuleName(const char * moduleName);
    virtual const char * getMissionID() const;
    virtual void setMissionID(const char * missionID);
    virtual const char * getTrajectoryID() const;
    virtual void setTrajectoryID(const char * trajectoryID);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const CreationMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, CreationMsg& obj) {obj.parsimUnpack(b);}

#endif // ifndef __CREATIONMSG_M_H

