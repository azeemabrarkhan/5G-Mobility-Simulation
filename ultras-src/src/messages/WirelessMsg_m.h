//
// Generated file, do not edit! Created by nedtool 5.6 from messages/WirelessMsg.msg.
//

#ifndef __WIRELESSMSG_M_H
#define __WIRELESSMSG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
    #include "util/DataTypes/StateDataTypes.h" 
    #include "modules/vehicle/CommunicationCoordinator.h"
    
// }}

/**
 * Class generated from <tt>messages/WirelessMsg.msg:11</tt> by nedtool.
 * <pre>
 * message WirelessMsg
 * {
 *     StateWithCovariance VehicleLocation;
 * }
 * </pre>
 */
class WirelessMsg : public ::omnetpp::cMessage
{
  protected:
    StateWithCovariance VehicleLocation;

  private:
    void copy(const WirelessMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WirelessMsg&);

  public:
    WirelessMsg(const char *name=nullptr, short kind=0);
    WirelessMsg(const WirelessMsg& other);
    virtual ~WirelessMsg();
    WirelessMsg& operator=(const WirelessMsg& other);
    virtual WirelessMsg *dup() const override {return new WirelessMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual StateWithCovariance& getVehicleLocation();
    virtual const StateWithCovariance& getVehicleLocation() const {return const_cast<WirelessMsg*>(this)->getVehicleLocation();}
    virtual void setVehicleLocation(const StateWithCovariance& VehicleLocation);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const WirelessMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, WirelessMsg& obj) {obj.parsimUnpack(b);}


#endif // ifndef __WIRELESSMSG_M_H

