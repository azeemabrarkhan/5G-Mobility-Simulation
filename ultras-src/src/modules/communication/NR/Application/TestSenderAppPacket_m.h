//
// Generated file, do not edit! Created by nedtool 5.6 from modules/communication/NR/Application/TestSenderAppPacket.msg.
//

#ifndef __TESTSENDERAPPPACKET_M_H
#define __TESTSENDERAPPPACKET_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



class TestSenderAppPacket;
#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk

/**
 * Class generated from <tt>modules/communication/NR/Application/TestSenderAppPacket.msg:20</tt> by nedtool.
 * <pre>
 * class TestSenderAppPacket extends inet::FieldsChunk
 * {
 *     simtime_t payloadTimestamp;
 * }
 * </pre>
 */
class TestSenderAppPacket : public ::inet::FieldsChunk
{
  protected:
    omnetpp::simtime_t payloadTimestamp = SIMTIME_ZERO;

  private:
    void copy(const TestSenderAppPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const TestSenderAppPacket&);

  public:
    TestSenderAppPacket();
    TestSenderAppPacket(const TestSenderAppPacket& other);
    virtual ~TestSenderAppPacket();
    TestSenderAppPacket& operator=(const TestSenderAppPacket& other);
    virtual TestSenderAppPacket *dup() const override {return new TestSenderAppPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual omnetpp::simtime_t getPayloadTimestamp() const;
    virtual void setPayloadTimestamp(omnetpp::simtime_t payloadTimestamp);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const TestSenderAppPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, TestSenderAppPacket& obj) {obj.parsimUnpack(b);}

#endif // ifndef __TESTSENDERAPPPACKET_M_H

